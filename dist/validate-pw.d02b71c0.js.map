{"version":3,"sources":["js/validate-pw.js"],"names":["form","document","getElementById","submit","querySelector","password","checkpoints","charsmin","charsmax","digitsmin","lowercasemin","uppercasemin","specialcharmin","pwlength","inputFocus","passwordLengthMin","passwordLengthMax","validatePassword","str","regexCharDigit","regexCharSpecial","regexCharUppercase","regexCharLowercase","hasCharDigit","test","hasCharSpecial","hasCharUppercase","hasCharLowercase","showCharDigit","match","showCharSpecial","showCharUppercase","showCharLowercase","passwordLength","length","passwordLengthGood","passwordLengthDiffShort","passwordLengthDiffLong","passwordLengthIsGood","passwordLengthIsShort","passwordLengthIsLong","checklistArr","check","target","forEach","obj","classList","add","remove","style","color","innerHTML","validateInput","getfocus","height","border","losefocus","placeholder"],"mappings":"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","file":"validate-pw.d02b71c0.js","sourceRoot":"..","sourcesContent":["// DOM Elements\r\nconst form = document.getElementById('pw-validator');\r\nconst submit = document.querySelector('.submit');\r\nconst password = document.querySelector('.password');\r\nconst checkpoints = document.querySelector('.checkpoints');\r\nconst charsmin = document.querySelector('#chars-min');\r\nconst charsmax = document.querySelector('#chars-max');\r\nconst digitsmin = document.querySelector('#digits-min');\r\nconst lowercasemin = document.querySelector('#lowercase-min');\r\nconst uppercasemin = document.querySelector('#uppercase-min');\r\nconst specialcharmin = document.querySelector('#special-char-min');\r\nconst pwlength = document.querySelector('.pw-length');\r\nconst inputFocus = document.querySelector('#pw-validator .wrapper');\r\n// Password Variables\r\nconst passwordLengthMin = 8;\r\nconst passwordLengthMax = 32;\r\n\r\n/**\r\n *  Password Requirements  \r\n * \r\n *  1. 8 - 32 chars long\r\n *  2. 1 or more special char\r\n *  3. 1 or more uppercase letter\r\n *  4. 1 or more lowercase letter\r\n * \r\n */\r\nfunction validatePassword( str ) {\r\n   // Regex patterns\r\n   const regexCharDigit = /[0-9]/g;\r\n   const regexCharSpecial = /\\W+/g;\r\n   const regexCharUppercase = /[A-Z]/g;\r\n   const regexCharLowercase = /[a-z]/g;\r\n   // Test regex has patterns, true or false\r\n   const hasCharDigit = regexCharDigit.test( str );\r\n   const hasCharSpecial = regexCharSpecial.test( str );\r\n   const hasCharUppercase = regexCharUppercase.test( str );\r\n   const hasCharLowercase = regexCharLowercase.test( str );\r\n   // Show regex patterns\r\n   const showCharDigit = str.match( regexCharDigit );\r\n   const showCharSpecial = str.match( regexCharSpecial );\r\n   const showCharUppercase = str.match( regexCharUppercase );\r\n   const showCharLowercase = str.match( regexCharLowercase );\r\n   // Length criteria\r\n   const passwordLength = str.length;\r\n   // Length difference\r\n   const passwordLengthGood = ( passwordLength - passwordLengthMax );\r\n   const passwordLengthDiffShort = ( passwordLengthMin - passwordLength );\r\n   const passwordLengthDiffLong = ( passwordLength - passwordLengthMax );\r\n   // Password checks, set default values\r\n   let passwordLengthIsGood = false;\r\n   let passwordLengthIsShort = true;\r\n   let passwordLengthIsLong = false;\r\n   // Set password length status when good\r\n   if( passwordLength >= passwordLengthMin && passwordLength <= passwordLengthMax ) {\r\n      passwordLengthIsGood = true;\r\n      passwordLengthIsShort = false;\r\n      passwordLengthIsLong = false;\r\n   } \r\n   // Set password length status when short\r\n   if( passwordLength < passwordLengthMin ) {\r\n      passwordLengthIsGood = false;\r\n      passwordLengthIsShort = true;\r\n      passwordLengthIsLong = false;\r\n   }\r\n   // Set password length status when long\r\n   if( passwordLength > passwordLengthMax ) {\r\n      passwordLengthIsGood = false;\r\n      passwordLengthIsShort = false;\r\n      passwordLengthIsLong = true;\r\n   } \r\n\r\n   // Validation Array of Objects for each Check\r\n   const checklistArr = [\r\n      {\r\n         check: hasCharDigit,\r\n         target: digitsmin\r\n      },\r\n      {\r\n         check: hasCharSpecial,\r\n         target:specialcharmin\r\n      },\r\n      {\r\n         check: hasCharLowercase,\r\n         target: lowercasemin\r\n      },\r\n      {\r\n         check: hasCharUppercase,\r\n         target: uppercasemin\r\n      }\r\n   ];\r\n\r\n\r\n   // Add classes if input has text\r\n   if( passwordLength > 0 ) {\r\n      // Checks for digits, lowercase, uppercase, and specialchar to be true\r\n      checklistArr.forEach( obj => {\r\n         if( obj.check ) {\r\n            if( obj.target === digitsmin || obj.target === lowercasemin ) {\r\n               obj.target.classList.add('pass');\r\n            } else {\r\n               obj.target.classList.add('pass-even');\r\n            }\r\n         } else {\r\n            obj.target.classList.remove('pass');\r\n            obj.target.classList.remove('pass-even');\r\n         }\r\n      });\r\n      // Remove Classes if input has no text\r\n   } else {\r\n      checklistArr.forEach( obj => {\r\n         obj.target.classList.remove('pass');\r\n         obj.target.classList.remove('pass-even');\r\n      });\r\n   }  \r\n\r\n   // Validate length\r\n   if( passwordLength === 0 ) {\r\n      charsmin.classList.remove('pass');\r\n      charsmax.classList.remove('pass-even');\r\n   } else if( passwordLength >= passwordLengthMin ) {\r\n      charsmin.classList.add('pass')\r\n   } else if( passwordLength > 0 ) {\r\n      charsmax.classList.add('pass-even')\r\n   } \r\n   \r\n   // Remove max if greater than max chars allowed\r\n   if( passwordLength > passwordLengthMax) {\r\n      charsmax.classList.remove('pass-even');\r\n   }\r\n\r\n   \r\n   // Display number of digits for user to see count\r\n   if( passwordLength === 0 ) {\r\n      pwlength.style.color = 'white';\r\n   } else if( passwordLengthIsShort ) {\r\n      pwlength.style.color = 'var(--warning)';\r\n      pwlength.innerHTML = `-${passwordLengthDiffShort}`;\r\n   } else if( passwordLengthIsGood ) {\r\n      pwlength.style.color = 'var(--pass)';\r\n      pwlength.innerHTML = `${passwordLength}`;\r\n   } else if( passwordLengthIsLong ) {\r\n      pwlength.style.color = 'var(--warning)';\r\n      pwlength.innerHTML = `+${passwordLengthDiffLong}`;\r\n   }\r\n\r\n};\r\n\r\n\r\n// Validate onkeyup\r\nfunction validateInput( str ) {\r\n   validatePassword( str );\r\n\r\n};\r\n\r\n// Style Input Focus\r\nfunction getfocus() {\r\n   password.style.height = '60px';\r\n   inputFocus.style.border = '3px solid var(--primary)'\r\n}\r\n\r\nfunction losefocus() {\r\n   password.style.height = '64px';\r\n   inputFocus.style.border = '1px solid var(--primary)'\r\n   password.placeholder = 'Enter password';\r\n}"]}